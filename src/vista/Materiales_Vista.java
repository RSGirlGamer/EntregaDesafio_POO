/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import Controlador.Controlador;
import desafio.AgregarMateriales;
import desafio.CD;
import desafio.DVD;
import desafio.Libro;
import desafio.Revista;
import desafio.Material;
import desafio.bd_Connection;
import desafio.utilities;
import java.sql.SQLException;
import java.sql.Time;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jorge LG
 */
public class Materiales_Vista extends javax.swing.JFrame {

    public Object btnMostar;

    /**
     * Creates new form Materiales_JFrame
     */
    public Materiales_Vista() {
        initComponents();
        cmbTipoItemStateChanged(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtTitulo = new javax.swing.JTextField();
        cmbTipo = new javax.swing.JComboBox<>();
        btnInsertar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        txtAutor = new javax.swing.JTextField();
        txtGenero = new javax.swing.JTextField();
        txtDuracion = new javax.swing.JTextField();
        spnCantidad = new javax.swing.JSpinner();
        spnPags = new javax.swing.JSpinner();
        txtEditorial = new javax.swing.JTextField();
        txtISBN = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        txtPeriod = new javax.swing.JTextField();
        btnMostrar = new javax.swing.JButton();
        spnCanciones = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        btnDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));

        jLabel1.setText("Titulo");

        jLabel2.setText("Tipo");

        jLabel3.setText("ID");

        jLabel4.setText("Autor/Artista/Director");

        jLabel5.setText("Genero");

        jLabel6.setText("Duración");

        jLabel7.setText("Canciones");

        jLabel8.setText("Stock");

        jLabel9.setText("Páginas");

        jLabel10.setText("Editorial");

        jLabel11.setText("ISBN");

        jLabel12.setText("Año/Fecha");

        jLabel13.setText("Periodicidad");

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CD", "DVD", "Libro", "Revista" }));
        cmbTipo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTipoItemStateChanged(evt);
            }
        });

        btnInsertar.setText("Insertar");
        btnInsertar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnInsertarMouseClicked(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarMouseClicked(evt);
            }
        });

        btnEditar.setText("Actualizar");
        btnEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditarMouseClicked(evt);
            }
        });

        txtDuracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDuracionActionPerformed(evt);
            }
        });

        btnMostrar.setText("Mostrar");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTitulo)
                            .addComponent(cmbTipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAutor)
                                    .addComponent(txtGenero)
                                    .addComponent(txtDuracion)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(spnCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 15, Short.MAX_VALUE)))
                                .addGap(19, 19, 19))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(spnCanciones, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMostrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnInsertar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEditorial)
                            .addComponent(txtISBN)
                            .addComponent(txtYear)
                            .addComponent(txtPeriod)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(spnPags, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(spnPags, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(spnCanciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spnCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel13)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEditorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMostrar)
                    .addComponent(btnInsertar)
                    .addComponent(btnBuscar)
                    .addComponent(btnEditar))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Detalle"));

        btnDelete.setText("Eliminar");
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteMouseClicked(evt);
            }
        });

        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Categoria", "Tipo", "Titulo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDatosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDatos);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnDelete))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void txtDuracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDuracionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDuracionActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        // TODO add your handling code here:
        ArrayList<Material> materiales =new ArrayList<>();
        AgregarMateriales registro = new AgregarMateriales();
        DefaultTableModel modelo = new DefaultTableModel();
        bd_Connection materialesBD = new bd_Connection();
        clear();
        generalUnlock();
               
        
        modelo = (DefaultTableModel)tblDatos.getModel();
        modelo.setRowCount(0);
        try {
            materiales = registro.fromBD(materialesBD);
        } catch (SQLException ex) {
            Logger.getLogger(Materiales_Vista.class.getName()).log(Level.SEVERE, null, ex);
        }
        addRows(modelo,tblDatos, materiales);
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void addRows(DefaultTableModel modelo,JTable tblDatos,ArrayList<Material> materiales){
        for(Material material:materiales){
            Object[] fila = {material.getId(),material.getL2(),material.getTipo(),material.getTitulo()};
            modelo.addRow(fila);
            
        }
        tblDatos.setModel(modelo);
        
    }
    private void cmbTipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTipoItemStateChanged
        // TODO add your handling code here:
        String selectedItem = (String) cmbTipo.getSelectedItem();
        String L2 ="";
        
        switch (selectedItem) {
            case "CD":
                forCd();
                spnCanciones.setEnabled(true);
                break;
            case "DVD":
                forDVD();
                spnCanciones.setEnabled(false);
                break;
            case "Revista":
                forRevista();
                spnCanciones.setEnabled(false);
                break;
            case "Libro":
                forLibro();
                spnCanciones.setEnabled(false);
                break;
                    
            default:
                throw new AssertionError();
        }
    }//GEN-LAST:event_cmbTipoItemStateChanged

    private void btnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseClicked
        // TODO add your handling code here:
        String id = txtID.getText();
        bd_Connection materialesBD = new bd_Connection();
        AgregarMateriales registro = new AgregarMateriales();
        ArrayList<Material> materiales =new ArrayList<>();
        DefaultTableModel modelo = new DefaultTableModel();
        modelo = (DefaultTableModel)tblDatos.getModel();
        modelo.setRowCount(0);
        try {
            materiales = registro.buscarDato(materialesBD, id);
        } catch (SQLException ex) {
            Logger.getLogger(Materiales_Vista.class.getName()).log(Level.SEVERE, null, ex);
        }
        addRows(modelo,tblDatos, materiales);
    }//GEN-LAST:event_btnBuscarMouseClicked

    private void btnDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblDatos.getSelectedRow();
        generalUnlock();
        AgregarMateriales registro = new AgregarMateriales();
        DefaultTableModel modelo = new DefaultTableModel();
        bd_Connection materialesBD = new bd_Connection();
        ArrayList<Material> materiales =new ArrayList<>();
        String id="";
        modelo = (DefaultTableModel)tblDatos.getModel();
        if (selectedRow !=-1) {
            System.out.println(selectedRow);
            Object idO = tblDatos.getValueAt(selectedRow, 0);
            System.out.println(idO);
            id = idO !=null ? idO.toString():"";
            System.out.println(id);
            registro.deleteDato(id);            
        }
        try {
            modelo.setRowCount(0);
            materiales = registro.fromBD(materialesBD);
        } catch (SQLException ex) {
            Logger.getLogger(Materiales_Vista.class.getName()).log(Level.SEVERE, null, ex);
        }
        addRows(modelo,tblDatos, materiales);
    }//GEN-LAST:event_btnDeleteMouseClicked
    private void clear(){
                txtID.setText("");
                txtTitulo.setText("");
                txtAutor.setText("");
                txtGenero.setText("");
                txtDuracion.setText("");
                spnCanciones.setValue(0);
                spnCantidad.setValue(0);
                txtPeriod.setText("");
                txtYear.setText("");
                txtEditorial.setText("");
                txtISBN.setText("");
                spnPags.setValue(0);
    }
    private void btnInsertarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInsertarMouseClicked
        // TODO add your handling code here:
        String selectedItem = (String) cmbTipo.getSelectedItem();
          String L2 ="";
          String id ="";
          String titulo="";
          String autor = "";
          String genero = "";
          String editorial = ""; 
          int stock;
          AgregarMateriales registro = new AgregarMateriales();
          bd_Connection materialesBD = new bd_Connection();
          ArrayList<Material> materiales =new ArrayList<>();
          DefaultTableModel modelo = new DefaultTableModel();
          LocalTime duracion;
        
        switch (selectedItem) {
            case "CD":
                
                L2="MaterialAudiovisual";
                id = txtID.getText();
                titulo= txtTitulo.getText();
                autor = txtAutor.getText();
                genero = txtGenero.getText();
                duracion = utilities.parseDuracion(txtDuracion.getText());
                int canciones = Integer.parseInt(spnCanciones.getValue().toString());
                stock = Integer.parseInt( spnCantidad.getValue().toString());
                registro.insertToCds(id,L2,autor, genero,duracion, canciones, stock, selectedItem, titulo);
                txtID.setText("");
                txtTitulo.setText("");
                txtAutor.setText("");
                txtGenero.setText("");
                txtDuracion.setText("");
                spnCanciones.setValue(0);
                break;
            case "DVD":
                L2="MaterialAudiovisual";
                id = txtID.getText();
                titulo= txtTitulo.getText();
                autor = txtAutor.getText();
                genero = txtGenero.getText();
                duracion = utilities.parseDuracion(txtDuracion.getText());
                stock = Integer.parseInt( spnCantidad.getValue().toString());
                registro.insertToDvds(id,L2, autor,duracion, genero, stock,selectedItem, titulo);
                txtID.setText("");
                txtTitulo.setText("");
                txtAutor.setText("");
                txtGenero.setText("");
                txtDuracion.setText("");
                spnCantidad.setValue(0);
                break;
            case "Revista":
                L2="MaterialEscrito";
                id = txtID.getText();
                titulo= txtTitulo.getText();
                editorial = txtEditorial.getText();
                Date fecha_publicacion = utilities.parseDate(txtYear.getText());
                String periodicidad = txtPeriod.getText();
                stock = Integer.parseInt( spnCantidad.getValue().toString());
                registro.insertToRevistas(id,L2,editorial,periodicidad,fecha_publicacion, stock, selectedItem,titulo);
                txtID.setText("");
                txtTitulo.setText("");
                txtAutor.setText("");
                txtYear.setText("");
                spnCantidad.setValue(0);
                txtPeriod.setText("");
                break;
            case "Libro":
                L2="MaterialEscrito";
                id = txtID.getText();
                titulo= txtTitulo.getText();
                editorial = txtEditorial.getText();
                autor =txtAutor.getText();
                int anio_publicacion = Integer.parseInt(txtYear.getText());
                String ISBN = txtISBN.getText();
                stock = Integer.parseInt((String) spnCantidad.getValue().toString());
                int num_pags = Integer.parseInt((String) spnPags.getValue().toString());
                registro.insertToLibros(id,L2,autor, editorial, ISBN,num_pags, anio_publicacion, stock,selectedItem, titulo);
                txtID.setText("");
                txtTitulo.setText("");
                txtAutor.setText("");
                txtYear.setText("");
                txtEditorial.setText("");
                break;
                
                    
            default:
                throw new AssertionError();
        }
        modelo = (DefaultTableModel)tblDatos.getModel();
        modelo.setRowCount(0);
        try {
            materiales = registro.fromBD(materialesBD);
        } catch (SQLException ex) {
            Logger.getLogger(Materiales_Vista.class.getName()).log(Level.SEVERE, null, ex);
        }
        addRows(modelo,tblDatos, materiales);
        clear();
    }//GEN-LAST:event_btnInsertarMouseClicked
    private void forCd(){

                txtAutor.setEnabled(true);
                txtGenero.setEnabled(true);
                txtDuracion.setEnabled(true);
                spnCantidad.setEnabled(true);
                spnCanciones.setEnabled(true);
                txtEditorial.setEnabled(false);
                txtPeriod.setEnabled(false);
                txtISBN.setEnabled(false);
                spnPags.setEnabled(false);
                txtYear.setEnabled(false);
    }
    private void forDVD(){

                txtAutor.setEnabled(true);
                txtGenero.setEnabled(true);
                txtDuracion.setEnabled(true);
                spnCantidad.setEnabled(true);
                txtEditorial.setEnabled(false);
                txtPeriod.setEnabled(false);
                txtISBN.setEnabled(false);
                
                spnPags.setEnabled(false);
                txtYear.setEnabled(false);
    }
    private void forRevista(){
                
                txtEditorial.setEnabled(true);
                txtYear.setEnabled(true);
                txtPeriod.setEnabled(true);
                spnCantidad.setEnabled(true);
                txtAutor.setEnabled(false);
                txtDuracion.setEnabled(false);
                txtGenero.setEnabled(false);

                
    }
    private void forLibro(){

                txtAutor.setEnabled(true);
                txtYear.setEnabled(true);
                txtISBN.setEnabled(true);
                spnCantidad.setEnabled(true);
                spnPags.setEnabled(true);
                txtEditorial.setEnabled(true);
                txtPeriod.setEnabled(false);
                txtDuracion.setEnabled(false);
                txtGenero.setEnabled(false);
                txtPeriod.setEnabled(false);
                
    }
    private void generalLock(){
        txtID.setEnabled(false);
        txtTitulo.setEnabled(false);
    }
    private void generalUnlock(){
        txtID.setEnabled(true);
        txtTitulo.setEnabled(true);
    }

    private void tblDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDatosMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblDatos.getSelectedRow();
        clear();
        
        
        if (evt.getClickCount()==2&& selectedRow != -1) {
            String id = tblDatos.getValueAt(selectedRow, 0).toString();
            bd_Connection materialesBD = new bd_Connection();
            AgregarMateriales registro = new AgregarMateriales();
            ArrayList<Material> materiales =new ArrayList<>();
            DefaultTableModel modelo = new DefaultTableModel();
            modelo = (DefaultTableModel)tblDatos.getModel();
            modelo.setRowCount(0);
            generalLock();
       try {
            materiales = registro.buscarDato(materialesBD, id);
            if (!materiales.isEmpty()) {
                Material material = materiales.get(0);
                
                switch (material.getTipo()) {
                        
                    case "CD":
                        
                        if(material instanceof CD){
                            forCd();
                            CD cd = (CD) material;
                            txtID.setText(cd.getId());
                            txtAutor.setText(cd.getArtist());
                            txtTitulo.setText(cd.getTitulo());
                            txtGenero.setText(cd.getGenero());
                            txtDuracion.setText(cd.getDuracion().toString());
                            spnCanciones.setValue(cd.getCanciones());
                            spnCantidad.setValue(cd.getUnidades());
                            cmbTipo.setSelectedIndex(0);
                            
                            spnCanciones.setEnabled(true);
                        }
                    case "DVD":
                        forDVD();
                        if (material instanceof DVD) {
                            DVD dvd = (DVD) material;
                            txtID.setText(dvd.getId());
                            txtTitulo.setText(dvd.getTitulo());
                            txtAutor.setText(dvd.getDirector());
                            txtGenero.setText(dvd.getGenero());
                            txtDuracion.setText(dvd.getDuracion().toString());
                            spnCantidad.setValue(dvd.getUnidades());
                            cmbTipo.setSelectedIndex(1);  
                            
                            spnCanciones.setEnabled(false);
                        }
                      
                        break;
                    case "Revista":
                    
                    if (material instanceof Revista) {
                            forRevista();

                            Revista revista = (Revista) material;

                            txtID.setText(revista.getId());
                            txtTitulo.setText(revista.getTitulo());
                            txtEditorial.setText(revista.getEditorial());
                            txtPeriod.setText(revista.getPeriod());
                            txtYear.setText(utilities.parseDateSQL(revista.getDate().toString()));
                            spnCantidad.setValue(revista.getUnidades());                            
                            cmbTipo.setSelectedIndex(3);  
                            
                            txtISBN.setEnabled(false);
                            txtAutor.setEnabled(false);
                            txtISBN.setEnabled(false);
                            txtPeriod.setEnabled(true);
                            spnPags.setEnabled(false);
                            spnCanciones.setEnabled(false);
                            
                            
                        }
                    break;
                    case "Libro":
                    forLibro();
                    if (material instanceof Libro) {
                            Libro Libro = (Libro) material;

                            txtID.setText(Libro.getId());
                            txtTitulo.setText(Libro.getTitulo());
                            txtEditorial.setText(Libro.getEditorial());
                            txtYear.setText(String.valueOf(Libro.getYear()));
                            txtISBN.setText(Libro.getISBN());
                            spnPags.setValue(Libro.getPags());                            
                            spnCantidad.setValue(Libro.getUnidades());                            
                            cmbTipo.setSelectedIndex(2); 
                            
                            txtAutor.setEnabled(false);
                            spnCanciones.setEnabled(false);
                        }
                    break;
                    default:
                        throw new AssertionError();
                }    
           }                  
        } catch (SQLException ex) {
            Logger.getLogger(Materiales_Vista.class.getName()).log(Level.SEVERE, null, ex);
        }
        addRows(modelo,tblDatos, materiales);
        
        
            
            
            
            
        }
    }//GEN-LAST:event_tblDatosMouseClicked
    private ArrayList<Material> llenar(AgregarMateriales registro,bd_Connection materialesBD, ArrayList<Material> materiales){
        try {
            materiales = registro.fromBD(materialesBD);
        } catch (SQLException ex) {
            Logger.getLogger(Materiales_Vista.class.getName()).log(Level.SEVERE, null, ex);
        }
        return materiales;
    }
    private void btnEditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditarMouseClicked
        // TODO add your handling code here:
         AgregarMateriales registro = new AgregarMateriales();
          ArrayList<Material> materiales =new ArrayList<>();
          DefaultTableModel modelo = new DefaultTableModel();
          bd_Connection materialesBD = new bd_Connection();
          String selectedItem = (String) cmbTipo.getSelectedItem();

          String autor = "";
          String id = "";
          String genero = "";
          String editorial = ""; 
          int anio_publicacion; 
          LocalTime duracion;
          String period = "";
          String ISBN="";
          Date fecha_publicacion;
          int stock, num_canciones, num_pags;
          
          
          switch (selectedItem) {
            case "Revista":
                cmbTipo.setSelectedIndex(3);
                id = txtID.getText();
                editorial = txtEditorial.getText();
                period = txtPeriod.getText();
                fecha_publicacion = utilities.parseDate(txtYear.getText());
                stock = Integer.parseInt( spnCantidad.getValue().toString());
                registro.updateRevistas(id,editorial,period,fecha_publicacion, stock);
                
                break;
            case "Libro":
                cmbTipo.setSelectedIndex(2);
                id = txtID.getText();
                autor = txtAutor.getText();
                period = txtPeriod.getText();
                anio_publicacion = Integer.parseInt(txtYear.getText());
                num_pags = Integer.parseInt( spnPags.getValue().toString());
                editorial = txtEditorial.getText();
                ISBN = txtISBN.getText();
                stock = Integer.parseInt( spnCantidad.getValue().toString());
                registro.updateLibros(id,autor, num_pags, editorial, ISBN,anio_publicacion, stock);
            break;
            case "CD":
                cmbTipo.setSelectedIndex(0);
                id = txtID.getText();
                autor = txtAutor.getText();
                genero = txtGenero.getText();
                period = txtPeriod.getText();
                anio_publicacion = Integer.parseInt(txtYear.getText());
                duracion = utilities.parseDuracion(txtDuracion.getText());
                num_pags = Integer.parseInt( spnPags.getValue().toString());
                editorial = txtEditorial.getText();
                ISBN = txtISBN.getText();
                num_canciones = Integer.parseInt( spnCanciones.getValue().toString());
                stock = Integer.parseInt( spnCantidad.getValue().toString());
                registro.updateCD(id,autor, genero, duracion, num_canciones,stock);
            break;
            case "DVD":
                cmbTipo.setSelectedIndex(1);
                id = txtID.getText();
                autor = txtAutor.getText();
                genero = txtGenero.getText();
                period = txtPeriod.getText();
                anio_publicacion = Integer.parseInt(txtYear.getText());
                duracion = utilities.parseDuracion(txtDuracion.getText());
                num_pags = Integer.parseInt( spnPags.getValue().toString());
                editorial = txtEditorial.getText();
                ISBN = txtISBN.getText();
                num_canciones = Integer.parseInt( spnCanciones.getValue().toString());
                stock = Integer.parseInt( spnCantidad.getValue().toString());
                registro.updateDVD(id,autor, genero, duracion,stock);
            break;
            default:
                throw new AssertionError();
        }
          
          modelo = (DefaultTableModel)tblDatos.getModel();
          modelo.setRowCount(0);
          
          addRows(modelo,tblDatos, llenar(registro,materialesBD,materiales));
          
    }//GEN-LAST:event_btnEditarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        Materiales_Vista v = new Materiales_Vista();
        Controlador c= new Controlador(v);
        v.setVisible(true);
        v.setLocationRelativeTo(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnInsertar;
    public static javax.swing.JButton btnMostrar;
    private javax.swing.JComboBox<String> cmbTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner spnCanciones;
    private javax.swing.JSpinner spnCantidad;
    private javax.swing.JSpinner spnPags;
    public javax.swing.JTable tblDatos;
    private javax.swing.JTextField txtAutor;
    private javax.swing.JTextField txtDuracion;
    private javax.swing.JTextField txtEditorial;
    private javax.swing.JTextField txtGenero;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtISBN;
    private javax.swing.JTextField txtPeriod;
    private javax.swing.JTextField txtTitulo;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
